        user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    types_hash_max_size 2048;

    keepalive_timeout  65;

    ##
    #GZip setting
    ##
    gzip  on;
    gzip_disable "msie6"

    # site configuration
    include /etc/nginx/conf.d/*.conf;
    server_names_hash_bucket_size 64;

    {% set fqdn = '%s.%s' % (environment.subdomain, environment.basedomain) %}
    # Nginx Single-file setup

    # Redirect 80 immediately to https
    server {
            listen 80;
            server_name {{fqdn}} www.{{fqdn}};
            rewrite        ^ https://{{fqdn}}$request_uri? permanent;
    }

    server {
            server_name {{fqdn}} www.{{fqdn}};
            listen  443 default_server;
            keepalive_timeout    60;
            gzip_static on;
            gzip_proxied any;
            proxy_set_header Accept-Encoding $http_accept_encoding;
            ssl on;
            ssl_certificate /opt/cfg/nginx/ssl/{{environment.ssl.root.name}}.crt;
            ssl_certificate_key /opt/cfg/nginx/ssl/{{environment.ssl.root.name}}.key;
            ssl_protocols TLSv1;
            proxy_connect_timeout       300;
            proxy_send_timeout          300;
            proxy_read_timeout          300;
            send_timeout                300;
            #Disables all weak ciphers
            #ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            location ^~ /updating/ {
                expires 5m;
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                index updater-view.html;
                alias /opt/cfg/upgrade/;
            }

            location ^~ /jslib {
                expires 5m;
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                rewrite /jslib/(.*) /$1 break;
                root /opt/code/github/web_python/root/jslib/;
           }

           location ^~ /logs {
               expires 5m;
               add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                index update_env.log;
                alias /opt/logs/;
           }

           location ~ \.* {
                   root /opt/cfg/upgrade;
                   rewrite ^ /maintenance.html break;
            }


    }


}
