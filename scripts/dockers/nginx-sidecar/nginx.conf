        user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    types_hash_max_size 2048;

    keepalive_timeout  65;

    ##
    #GZip setting
    ##
    gzip  on;
    gzip_disable "msie6"

    # site configuration
    include /etc/nginx/conf.d/*.conf;
    server_names_hash_bucket_size 64;

    {% set fqdn = '%s.%s' % (environment.subdomain, environment.basedomain) %}
    # Nginx Single-file setup
    upstream {{environment.subdomain}} {
        ip_hash; # force trafic to be 1 on 1 for auth to work
        {% for host in nodes.cpu %}
        server {{host.backplane.ipaddress}}:2001;
        {% endfor %}
        }

    upstream ovs-{{environment.subdomain}} {
        ip_hash; # force trafic to be 1 on 1 for auth to work
        {% for host in nodes.storage %}
        server {{host.backplane.ipaddress}}:2001;
        {% endfor %}
        }

    upstream cloudbroker {
            server portal:82;
    }

    # Redirect 80 immediately to https
    server {
            listen 80;
            server_name {{fqdn}} www.{{fqdn}};
            rewrite        ^ https://{{fqdn}}$request_uri? permanent;
    }

    server {
            listen  443 default_server;
            keepalive_timeout    60;
            gzip_static on;
            gzip_proxied any;
            proxy_set_header Accept-Encoding $http_accept_encoding;
            ssl on;
            ssl_certificate /opt/cfg/nginx/ssl/root/{{environment.ssl.root.name}}.crt;
            ssl_certificate_key /opt/cfg/nginx/ssl/root/{{environment.ssl.root.name}}.key;
            ssl_protocols TLSv1;
            proxy_connect_timeout       300;
            proxy_send_timeout          300;
            proxy_read_timeout          300;
            send_timeout                300;
            #Disables all weak ciphers
            #ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            location = / {
                    return 301 $scheme://$host/g8vdc/;
            }

            location /g8vdc/ {
                expires 5m;
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                index /g8vdc/index.html;
                rewrite /g8vdc/(.*) /$1 break;
                root /opt/code/github/g8vdc/;
            }


            location / {
                    proxy_pass      http://cloudbroker/;
            }
    }


    server {
            listen  443;
            server_name ovs-{{fqdn}};
            keepalive_timeout    60;
            gzip_static on;
            gzip_proxied any;
            proxy_set_header Accept-Encoding $http_accept_encoding;
            ssl on;
            ssl_certificate /opt/cfg/nginx/ssl/ovs/{{environment.ssl.ovs.name}}.crt;
            ssl_certificate_key /opt/cfg/nginx/ssl/ovs/{{environment.ssl.ovs.name}}.key;
            ssl_protocols TLSv1;
            #Disables all weak ciphers
            ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
            location ~ /ovcinit/([\w-]+)? {
            add_header Set-Cookie "ovs_proxy_location=$1;Path=/";
            return 302 $scheme://$host/;
            }

            location / {
            proxy_pass http://ovs-$cookie_ovs_proxy_location;
            proxy_set_header Host "ovs";
            proxy_set_header X-Forwarded-Host $host;
            }
    }

    server {
            listen  443;
            server_name ~^novnc-(?<ovclocation>.+).{{environment.subdomain}}$;
            keepalive_timeout    60;
            gzip_static on;
            gzip_proxied any;
            proxy_set_header Accept-Encoding $http_accept_encoding;
            ssl on;
            ssl_certificate /opt/cfg/nginx/ssl/novnc/{{environment.ssl.novnc.name}}.crt;
            ssl_certificate_key /opt/cfg/nginx/ssl/novnc/{{environment.ssl.novnc.name}}.key;
            ssl_protocols TLSv1;
            #Disables all weak ciphers
            ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
            location / {
                    proxy_pass http://$ovclocation;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host "novnc";
                    proxy_read_timeout 86400;
            }
    }

    server {
            listen  443;
            server_name defense-{{fqdn}};
            keepalive_timeout    60;
            gzip_static on;
            gzip_proxied any;
            proxy_set_header Accept-Encoding $http_accept_encoding;
            ssl on;
            ssl_certificate /opt/cfg/nginx/ssl/defense/{{environment.ssl.defense.name}}.crt;
            ssl_certificate_key /opt/cfg/nginx/ssl/defense/{{environment.ssl.defense.name}}.key;
            ssl_protocols TLSv1;
            #Disables all weak ciphers
            ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

            # Setting up cookie on first request
            location ~ /ovcinit/(\d+).(\d+).(\d+).(\d+)/([\w-]+)? {
                    add_header Set-Cookie "ovc_proxy_target=$1.$2.$3.$4;Path=/";
                    add_header Set-Cookie "ovc_proxy_location=$5;Path=/";
                    return 302 $scheme://$host/webfig;
            }

            location / {
                    proxy_pass http://$cookie_ovc_proxy_location;
                    proxy_set_header Host            $host;
            }
    }
}